<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>devtory</title>
  
  <subtitle>Summary</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://devtory.github.io/"/>
  <updated>2018-12-03T12:58:51.958Z</updated>
  <id>https://devtory.github.io/</id>
  
  <author>
    <name>devtory</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ReactNative(Expo)에 Mobx(ES6) 적용하기</title>
    <link href="https://devtory.github.io/2018/11/27/ReactNative(Expo)%EC%97%90%20Mobx(ES6)%20%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <id>https://devtory.github.io/2018/11/27/ReactNative(Expo)에 Mobx(ES6) 적용하기/</id>
    <published>2018-11-27T05:40:06.000Z</published>
    <updated>2018-12-03T12:58:51.958Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ReactNative-Expo-에-Mobx-ES6-적용하기"><a href="#ReactNative-Expo-에-Mobx-ES6-적용하기" class="headerlink" title="ReactNative(Expo)에 Mobx(ES6) 적용하기"></a>ReactNative(Expo)에 Mobx(ES6) 적용하기</h1><blockquote><p>목표 : Expo CLI를 통해 생성된 ES6 프로젝트에 Mobx 적용하기</p></blockquote><ul><li>Why? ES6<ul><li>지금까지 까지 Typescript를 사용해여  개발해왔는데, 한가지 아쉬운점은 자료가 부족하다는 점입니다. </li><li>다행히 Server와 Web까지는 1~2년 전보다 생태계가  급격히 발전하여 좋은 자료가 생겨나고 있어 Typescript를 적용하기 좋은 환경이 갖추어졌습니다.</li><li>그러나 Expo와 Typescript에 관한 자료는 매우 적은 관계로, 이번 토이 프로젝트는 Tyepscript를 고집하지 않고 ES6를 사용 하기로 했습니다. 추후 조금더 생태계가 조성되면 Typescript를 사용해야 겠습니다.</li></ul></li></ul><ul><li><p>환경</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Windows 10</span><br><span class="line">Node.js 8.11.2</span><br><span class="line">Expo CLI 2.X (Ver 2.x → CRNA 기능 통합, XDE 웹기반으로 변경)</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>Expo CLI 설치</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> yarn global expo-cli    ※ 또는 npm isntall -g expo-cli</span><br></pre></td></tr></table></figure></li><li><p>프로젝트 생성 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> expo init &lt;Project Name&gt;  ※ "blank app" 선택</span><br></pre></td></tr></table></figure></li><li><p>MobX 설치</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd &lt;Project Name&gt;</span><br><span class="line"><span class="meta">$</span> yarn add mobx mobx-react</span><br></pre></td></tr></table></figure></li><li><p>데코레이터 관련 Babel 플러그인 설치</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> yarn add @babel/plugin-proposal-decorators --dev</span><br></pre></td></tr></table></figure><ul><li><p>babel.config.js 파일에 플러그인 적용</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">module.exports = function(api) &#123;</span><br><span class="line">  api.cache(true);</span><br><span class="line">  return &#123;</span><br><span class="line">    presets: ['babel-preset-expo'],</span><br><span class="line">    plugins: [['@babel/plugin-proposal-decorators', &#123; legacy: true &#125;]],</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul></li></ul><blockquote><p>단순한 카운터를 만들기 위해 카운터 스토어를 생성합니다.</p></blockquote><ul><li><p>엔트리파일 변경</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir src</span><br><span class="line"><span class="meta">$</span> mv App.js ./src</span><br><span class="line"><span class="meta">$</span> touch App.js</span><br></pre></td></tr></table></figure><ul><li><p>App.js 파일변경</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./src/App'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Store 생성</p><ul><li><p>src/stores폴더 생성</p></li><li><p>src/stores/CounterStores.ts 파일 생성 후 아래 내용을 입력 합니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; observable, action &#125; <span class="keyword">from</span> <span class="string">'mobx'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> CounterStore &#123;</span><br><span class="line">    <span class="meta">@observable</span> counter;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.counter = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@action</span></span><br><span class="line">    increase = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.counter++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@action</span></span><br><span class="line">    decrease = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.counter--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>src/stores/createStores.js 파일 생성 후 아래 내용을 입력 합니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; CounterStore &#125; <span class="keyword">from</span> <span class="string">'./CounterStore'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">createStores</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> counterStore = <span class="keyword">new</span> CounterStore(); <span class="comment">// CounterStore 객체 생성</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        counterStore,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>src/App.js 파일에 Store를 등록합니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">'mobx-react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createStores &#125; <span class="keyword">from</span> <span class="string">'./stores/createStores'</span>;</span><br><span class="line"><span class="keyword">import</span> Counter <span class="keyword">from</span> <span class="string">'./Components/Counter'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stores = createStores();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;Provider &#123;...stores&#125;&gt;</span><br><span class="line">        &lt;View style=&#123;styles.container&#125;&gt;</span><br><span class="line">          &lt;Counter /&gt;</span><br><span class="line">        &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>Provider&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li><p>src/components/Counter/index.js 파일을 생성하여 Store를 사용 테스트를 합니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Text, View, Button &#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; observer, inject &#125; <span class="keyword">from</span> <span class="string">'mobx-react'</span>;</span><br><span class="line"></span><br><span class="line">@inject(<span class="string">'counterStore'</span>)</span><br><span class="line">@observer</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; counter, increase, decrease&#125; = <span class="keyword">this</span>.props.counterStore;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;View&gt;</span><br><span class="line">        &lt;Text&gt;&#123;counter&#125;&lt;<span class="regexp">/Text&gt;</span></span><br><span class="line"><span class="regexp">        &lt;Button</span></span><br><span class="line"><span class="regexp">          onPress=&#123;increase&#125;</span></span><br><span class="line"><span class="regexp">          title="Increase"</span></span><br><span class="line"><span class="regexp">        /</span>&gt;</span><br><span class="line">        &lt;Button </span><br><span class="line">          onPress=&#123;decrease&#125;</span><br><span class="line">          title=<span class="string">"Decrease"</span></span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;<span class="regexp">/View&gt;</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ReactNative-Expo-에-Mobx-ES6-적용하기&quot;&gt;&lt;a href=&quot;#ReactNative-Expo-에-Mobx-ES6-적용하기&quot; class=&quot;headerlink&quot; title=&quot;ReactNative(Expo)에 Mobx(ES6)
      
    
    </summary>
    
      <category term="Mobile" scheme="https://devtory.github.io/categories/Mobile/"/>
    
      <category term="ReactNative" scheme="https://devtory.github.io/categories/Mobile/ReactNative/"/>
    
    
      <category term="Mobx" scheme="https://devtory.github.io/tags/Mobx/"/>
    
      <category term="ReactNative" scheme="https://devtory.github.io/tags/ReactNative/"/>
    
      <category term="ES6" scheme="https://devtory.github.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Promise와 Observable 차이</title>
    <link href="https://devtory.github.io/2018/11/23/Promise%EC%99%80%20Observable%20%EC%B0%A8%EC%9D%B4/"/>
    <id>https://devtory.github.io/2018/11/23/Promise와 Observable 차이/</id>
    <published>2018-11-23T06:43:05.000Z</published>
    <updated>2018-11-26T12:41:42.231Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Promise와-Observable-차이"><a href="#Promise와-Observable-차이" class="headerlink" title="Promise와 Observable 차이"></a>Promise와 Observable 차이</h1><h3 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h3><ul><li>resolve 또는 reject 한개의 값만 반환 </li></ul>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promiseError = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  resolve(<span class="number">10</span>); <span class="comment">// 값 전달</span></span><br><span class="line">  reject(<span class="string">'error'</span>); <span class="comment">// 에러 전달</span></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">promiseError.then(</span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.error(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line">  </span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="number">10</span>   <span class="comment">// resolve(10) 실행후 종료되므로 error는 발생하지 않음</span></span><br></pre></td></tr></table></figure><ul><li>Promise는 중간에 취소 할 수 없음<ul><li>만약 http request를 통해 검색 기능 구현시 아래와 같이 모든 키보드 입력 검색</li><li>love 검색시 l, lo, lov, love 4가지 모두 검색 요청</li></ul></li><li>Async/Await 사용 가능</li></ul><h3 id="Observable"><a href="#Observable" class="headerlink" title="Observable"></a>Observable</h3><ul><li><p>이벤트 또는 데이터 스트림과 같이 연속 데이터 반환 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; Observable &#125; = <span class="built_in">require</span> (<span class="string">'rxjs'</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> observableCreated$ = Observable.create(<span class="function"><span class="keyword">function</span>(<span class="params">observer</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    observer.next(<span class="number">1</span>); <span class="comment">// 다음에 전달할 값 또는 이벤트 발행</span></span><br><span class="line">    observer.next(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">throw</span>(<span class="string">"throw err test"</span>);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    observer.error(err); <span class="comment">// 에러나 예외를 받고, 구독 종료</span></span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    observer.complete(); <span class="comment">// 정상 적으로 구독 완료시 호출, 구독 조요</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">observableCreated$.subscribe(</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params">item</span>) </span>&#123; <span class="built_in">console</span>.log(item); &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">error</span>(<span class="params">err</span>) </span>&#123; <span class="built_in">console</span>.log(<span class="string">"error: "</span> + err); &#125;,</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">complete</span>(<span class="params"></span>) </span>&#123; <span class="built_in">console</span>.log(<span class="string">'complete'</span>); &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">error: <span class="keyword">throw</span> err test</span><br></pre></td></tr></table></figure></li><li><p>중간에 취소 할 수 있음</p><ul><li>만약 http request를 통해 검색 기능 구현시 필요없는 값은 삭제가능</li><li>love 검색시 l, lo, lov 값 삭제 후 love만 실행</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.term.valueChanges</span><br><span class="line">  .debounceTime(<span class="number">400</span>) <span class="comment">// 400밀초 미만의 출력 삭제</span></span><br><span class="line">  .distinctUntilChanged()</span><br><span class="line">  .subscribe(<span class="function"><span class="params">searchTerm</span> =&gt;</span> &#123; </span><br><span class="line">    ... </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Promise와-Observable-차이&quot;&gt;&lt;a href=&quot;#Promise와-Observable-차이&quot; class=&quot;headerlink&quot; title=&quot;Promise와 Observable 차이&quot;&gt;&lt;/a&gt;Promise와 Observable 
      
    
    </summary>
    
      <category term="Javascript" scheme="https://devtory.github.io/categories/Javascript/"/>
    
    
      <category term="javascript" scheme="https://devtory.github.io/tags/javascript/"/>
    
      <category term="promise" scheme="https://devtory.github.io/tags/promise/"/>
    
      <category term="observable" scheme="https://devtory.github.io/tags/observable/"/>
    
  </entry>
  
  <entry>
    <title>React Typescript 프로젝트에 MobX 적용</title>
    <link href="https://devtory.github.io/2018/11/13/React%20Typescript%20%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90%20MobX%20%EC%A0%81%EC%9A%A9/"/>
    <id>https://devtory.github.io/2018/11/13/React Typescript 프로젝트에 MobX 적용/</id>
    <published>2018-11-13T06:06:19.000Z</published>
    <updated>2018-12-03T13:00:07.720Z</updated>
    
    <content type="html"><![CDATA[<h2 id="React-Typescript-프로젝트에-MobX-적용"><a href="#React-Typescript-프로젝트에-MobX-적용" class="headerlink" title="React Typescript 프로젝트에 MobX 적용"></a>React Typescript 프로젝트에 MobX 적용</h2><blockquote><p>목표 : Typescript로 구성된 React 프로젝트에 MobX를 적용하고 Store 기반의 라우터 사용</p></blockquote><ul><li><p>환경</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Windows 10</span><br><span class="line">Node.js 8.11.2</span><br><span class="line">CRA 2.1.1</span><br></pre></td></tr></table></figure></li><li><p>MobX ?</p><ul><li><p>MobX는 Redux와 함께 가장 인기있는 상태관리 라이브러리 중 하나 입니다.</p></li><li><p>공식홈페이지에서는 Mobx를 매우 단순하고 확장성이 좋다고 소개 하고 있습니다. Redux와 비교해 볼때 충분히 동의할만한 내용입니다.</p></li><li><p>Mobx는 React가 상태를 저장하고 업데이트 하는 방식과 유사한 메커니즘을 제공하기 때문에  React와의 조합이 매우 강력하다고 합니다.</p></li><li><p>Mobx에 대한 세부 사항은 공식문서를 보실것을 추천드립니다.  (정리가 매우 잘 되어있습니다.)</p></li></ul></li></ul><blockquote><p>먼저, 프로젝트를 생성 후 Mobx를 적용해 보도록 하겠습니다.</p></blockquote><ul><li><p>crea-react-app으로 Typescript 프로젝트 생성하기</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> npm install -g create-react-app</span><br><span class="line"><span class="meta">$</span> create-react-app &lt;프로젝트명&gt; --scripts-version=react-scripts-ts</span><br></pre></td></tr></table></figure></li><li><p>mobx, react-router 설치</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd &lt;프로젝트명&gt;</span><br><span class="line"><span class="meta">$</span> yarn add mobx mobx-react</span><br></pre></td></tr></table></figure><ul><li>mobx패키지는 타입정의파일(d.ts)이 내장되어있어 별도 설치가 필요 없습니다.</li></ul></li><li><p>데코레이터를 사용하기 위해 tsconfig.json 파일에 아래내용 추가</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">...,</span><br><span class="line">"experimentalDecorators": true</span><br><span class="line">&#125;,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(선택사항) tslint.json에 귀찮은 옵션을 해제 합니다</p><ul><li>“ordered-imports”는 모듈 import시 A, B, C 순으로 호출하지 않을 경우 경고를 발생시켜 줍니다. 이 옵션은 아래 내용을 추가하여 해제 하겠습니다.</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">"rules": &#123;</span><br><span class="line">    "ordered-imports": false</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>디렉토리 구조</p><ul><li>디렉토리 구조에 대한 대한 표준은 없습니다.</li><li>여러가지 유형 중 저는 아래와 같은 구조를 선호 합니다.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+-- src</span><br><span class="line">   +-- stores        ※ 여러개의 store 생성 가능</span><br><span class="line">   +-- constant      ※ props로 전달되는 store 객체의 Key값으로 사용될 상수</span><br><span class="line">   +-- view</span><br><span class="line">       +-- containers   ※ store가 주입(inject)되는 컴포넌트</span><br><span class="line">       +-- components   ※ props를 통해 container로부터  store데이터를 전달받음</span><br><span class="line">                          (권장사항으로 component에서 직접 store를 주입해도 상관없습니다)</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>단순한 카운터를 예를 들어 스토어와 아래 컴포넌트를 생성해 보겠습니다.</p></blockquote><ul><li><p>Store 생성</p><ul><li><p>src/stores/CounterStore.ts 파일 생성 후 아래 내용을 입력 합니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; observable, action &#125; <span class="keyword">from</span> <span class="string">'mobx'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> CounterStore &#123;</span><br><span class="line">    <span class="meta">@observable</span> <span class="keyword">public</span> counter: <span class="built_in">number</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.counter = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@action</span></span><br><span class="line">    <span class="keyword">public</span> increase = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.counter++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@action</span></span><br><span class="line">    <span class="keyword">public</span> decrease = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.counter--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>데코레이터 설명</p><ul><li><p>@observable : observer로 관찰 가능해짐, 즉 값이 변경되면 observer에게 알림.</p></li><li><p>@action : @observable값을 변경 시키는 경우 사용</p></li></ul></li></ul></li><li><p>Store를 구분하기 위한 키(상수) 등록</p><ul><li><p>src/constant/stores.const.ts파일 생성후 아래 내용을 입력합니다.</p></li><li><p>언제나 그렇듯 정해진 형식은 없으니 나름의 기준을 정해 이름을 정하시면 됩니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> COUNTER_STORE = <span class="string">'counter_store'</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Store를 생성하기 위한 함수를 만듭니다</p><ul><li><p>src/stores/createStores.ts파일 생성후 아래 내용을 입력 합니다.</p></li><li><p>이후 추가되는 Store는 모두 이곳에 작성을 합니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; CounterStore &#125; <span class="keyword">from</span> <span class="string">'./CounterStore'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; COUNTER_STORE &#125; <span class="keyword">from</span> <span class="string">'src/constant/stores.const'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">createStores</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> counterStore = <span class="keyword">new</span> CounterStore(); <span class="comment">// CounterStore 객체 생성</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        [COUNTER_STORE]: counterStore,</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Store 등록</p><ul><li><p>src/index.tsx파일을 아래와 같이 수정합니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">'mobx-react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createStores &#125; <span class="keyword">from</span> <span class="string">'src/stores/createStores'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> stores = createStores();</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Provider &#123;...stores&#125;&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;<span class="regexp">/Provider&gt;,</span></span><br><span class="line"><span class="regexp">  document.getElementById('root') as HTMLElement</span></span><br><span class="line"><span class="regexp">);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">...</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul><blockquote><p>이제 스토어를 사용하면 됩니다.</p></blockquote><ul><li><p>컴포넌트 만들기</p><ul><li><p>src/view/containers/Counter/index.tsx 파일을 생성합니다.</p></li><li><p>예제 이므로 components 폴더는 사용하지 않습니다.</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; observer, inject &#125; <span class="keyword">from</span> <span class="string">'mobx-react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; CounterStore &#125; <span class="keyword">from</span> <span class="string">'src/stores/CounterStore'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; COUNTER_STORE &#125; <span class="keyword">from</span> <span class="string">'src/constant/stores.const'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@inject</span>(</span><br><span class="line">  COUNTER_STORE</span><br><span class="line">)</span><br><span class="line"><span class="meta">@observer</span></span><br><span class="line"><span class="keyword">class</span> Counter <span class="keyword">extends</span> React.Component&lt;&#123;&#125;, &#123;&#125;&gt; &#123;</span><br><span class="line">  <span class="keyword">public</span> render() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; counter, increase, decrease &#125; = (<span class="keyword">this</span>.props[COUNTER_STORE] <span class="keyword">as</span> CounterStore);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;Counter : &#123;counter&#125;&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">        &lt;button onClick=&#123;increase&#125;&gt;Increase&lt;/</span>button&gt;</span><br><span class="line">        &lt;button onClick=&#123;decrease&#125;&gt;Decrease&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Counter;</span><br></pre></td></tr></table></figure><ul><li><p>데코</p><ul><li><p>@inject : 컴포넌트의 props에 스토어 주입</p></li><li><p>@observer: 스토어의 변화를 관찰하여 업데이트시 결과 반영</p></li></ul></li></ul></li></ul></li></ul><ul><li><p>참고</p><ul><li><a href="https://github.com/mobxjs/mobx" target="_blank" rel="noopener">mobx 공식 저장소</a></li></ul></li><li><p>결과</p></li></ul><!-- ![실행화면](result.jpg) --><p><img src="result.gif" title="실행화면"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;React-Typescript-프로젝트에-MobX-적용&quot;&gt;&lt;a href=&quot;#React-Typescript-프로젝트에-MobX-적용&quot; class=&quot;headerlink&quot; title=&quot;React Typescript 프로젝트에 MobX 적용&quot;&gt;
      
    
    </summary>
    
      <category term="Frontend" scheme="https://devtory.github.io/categories/Frontend/"/>
    
      <category term="React" scheme="https://devtory.github.io/categories/Frontend/React/"/>
    
    
      <category term="React" scheme="https://devtory.github.io/tags/React/"/>
    
      <category term="Mobx" scheme="https://devtory.github.io/tags/Mobx/"/>
    
  </entry>
  
  <entry>
    <title>ReactNative(Expo)에 Typescript 적용</title>
    <link href="https://devtory.github.io/2018/11/11/ReactNative(Expo)%EC%97%90%20Typescript%20%EC%A0%81%EC%9A%A9/"/>
    <id>https://devtory.github.io/2018/11/11/ReactNative(Expo)에 Typescript 적용/</id>
    <published>2018-11-11T08:41:47.000Z</published>
    <updated>2018-11-23T06:45:23.648Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ReactNative-Expo-에-Typescript-적용"><a href="#ReactNative-Expo-에-Typescript-적용" class="headerlink" title="ReactNative(Expo)에 Typescript 적용"></a>ReactNative(Expo)에 Typescript 적용</h2><blockquote><p>목표 : Expo CLI를 통해 생성된 프로젝트에 Typescript 적용</p></blockquote><ul><li><p>환경</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Windows 10</span><br><span class="line">Node.js 8.11.2</span><br><span class="line">Expo CLI 2.X (Ver 2.x → CRNA 기능 통합, XDE 웹기반으로 변경)</span><br></pre></td></tr></table></figure></li><li><p>Expo CLI 설치</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> yarn global expo-cli    ※ 또는 npm isntall -g expo-cli</span><br></pre></td></tr></table></figure></li><li><p>프로젝트 생성 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> expo init &lt;Project Name&gt;  ※ "blank app" 선택</span><br></pre></td></tr></table></figure></li><li><p>Typescript관련 패키지 설치</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd &lt;Project Name&gt;</span><br><span class="line"><span class="meta">$</span> yarn add typescript react-native-typescript-transformer tslib</span><br><span class="line"><span class="meta">$</span> yarn add @types/react @types/react-native @types/expo @types/expo__vector-icons --dev</span><br></pre></td></tr></table></figure><ul><li><p>tsconfig.json 파일 생성 &amp; 수정</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ./node_modules/.bin/tsc.cmd --init  ※ "tsconfig.json"파일 생성</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">      <span class="attr">"target"</span>: <span class="string">"es2017"</span>,</span><br><span class="line">      <span class="attr">"module"</span>: <span class="string">"es2015"</span>,</span><br><span class="line">      <span class="attr">"lib"</span>: [</span><br><span class="line">          <span class="string">"es2017"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"jsx"</span>: <span class="string">"react-native"</span>,</span><br><span class="line">      <span class="attr">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"noEmit"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"importHelpers"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"moduleResolution"</span>: <span class="string">"node"</span>,</span><br><span class="line">      <span class="attr">"allowSyntheticDefaultImports"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"experimentalDecorators"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"emitDecoratorMetadata"</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"exclude"</span>: [</span><br><span class="line">      <span class="string">"node_modules"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>tslint.json 파일 생성</p><ul><li><p>세부 설정은 <a href="https://palantir.github.io/tslint/rules/" target="_blank" rel="noopener">tslint 공식홈</a> 참조</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"extends"</span>: [<span class="string">"tslint:recommended"</span>, <span class="string">"tslint-react"</span>, <span class="string">"tslint-config-prettier"</span>],</span><br><span class="line">  <span class="attr">"linterOptions"</span>: &#123;</span><br><span class="line">    <span class="attr">"exclude"</span>: [</span><br><span class="line">      <span class="string">"config/**/*.js"</span>,</span><br><span class="line">      <span class="string">"node_modules/**/*.ts"</span>,</span><br><span class="line">      <span class="string">"coverage/lcov-report/*.js"</span></span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>app.json파일  수정</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"expo"</span>: &#123;</span><br><span class="line">        <span class="attr">"packagerOpts"</span>: &#123;</span><br><span class="line">          <span class="attr">"sourceExts"</span>: [<span class="string">"ts"</span>, <span class="string">"tsx"</span>],</span><br><span class="line">          <span class="attr">"transformer"</span>: <span class="string">"node_modules/react-native-typescript-transformer/index.js"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>파일명 변경</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> mkdir src</span><br><span class="line"><span class="meta">$</span> mv App.js src/App.tsx</span><br></pre></td></tr></table></figure><ul><li><p>App.ts 파일생성</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./src/App'</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> App;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>실행</p><ul><li>스마트 폰에 Expo앱 설치후 아래 명령어 입력</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ expo start    ※ 스마트폰에서 생성된 QT코드 스캔</span><br></pre></td></tr></table></figure></li><li><p>결과</p><!-- ![실행화면](result.jpg) --><p><img src="result.jpg" title="실행화면" style="border: 1px solid black;"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ReactNative-Expo-에-Typescript-적용&quot;&gt;&lt;a href=&quot;#ReactNative-Expo-에-Typescript-적용&quot; class=&quot;headerlink&quot; title=&quot;ReactNative(Expo)에 Typescrip
      
    
    </summary>
    
      <category term="Mobile" scheme="https://devtory.github.io/categories/Mobile/"/>
    
      <category term="ReactNative" scheme="https://devtory.github.io/categories/Mobile/ReactNative/"/>
    
    
      <category term="ReactNative" scheme="https://devtory.github.io/tags/ReactNative/"/>
    
      <category term="Expo" scheme="https://devtory.github.io/tags/Expo/"/>
    
      <category term="Typescript" scheme="https://devtory.github.io/tags/Typescript/"/>
    
  </entry>
  
</feed>
